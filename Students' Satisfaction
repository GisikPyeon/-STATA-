encode 학년도학기, gen(year) 
encode 개설대학, gen(major) 
encode 학년, gen(grade)
encode 학정번호, gen(class)
encode 분반, gen(subclass)
encode 학점, gen(credit)
encode 수정종별, gen(elec)
encode 평가방식, gen(ab)
rename 평균 gpa
encode 수정교번, gen(prof)
encode 강의언어, gen(lang)
encode 온라인강의, gen(online)
encode 캠퍼스, gen(campus)
rename 수강인원 size

destring 문항1, gen(satis)
destring 문항21, gen(feed)
destring 문항22, gen(engage)
destring 문항3, gen(motivate)
destring 문항4, gen(flow)
destring 문항5, gen(develop)

*** 0=. missing value ***

recode size (0=.) // "0": 수강인원 0명
recode ab (999=.) // "999": 오류값 
recode gpa (0=.) (999=.) (9999=.) // "999": 오류값, "9999": p/np과목 점수(0)
recode grade (9=.) (999=.) // "9": 9학년(오류), "999": 오류값
* recode q_avg (0=.) // "0": 강의평가 점수 평균 0점(오류)
recode satis (0=.)
recode feed (0=.)
recode engage (0=.)
recode motivate (0=.)
recode flow (0=.)
recode develop (0=.)

** 역량의  축적정도 변환
foreach i of num 1/4 {
gen know`i'=substr(문항5`i', 4, 6)
replace know`i' = subinstr(know`i', "(", "",.) 
destring know`i', gen(k`i')
}

** 응답률을 측정********************************
foreach i of num 1/4 {
	gen res`i'=substr(문항5`i', 8, 10)
	replace res`i' = subinstr(res`i', "(", "",.) 
	replace res`i' = subinstr(res`i', ")", "",.)
	destring res`i', gen(r`i')
}


recode k1 (0=.)
recode k2 (0=.)
recode k3 (0=.)
recode k4 (0=.)

*********************************************
********************연구력 측정*********************
moss 연구업적, match("([0-9]+)")  regex
encode _match, gen(rd) /* research distance */
/* 학기에서 연도 만들어주기 */
gen y=substr(학년도학기, 1, 4)
gen yy = real(y)
gen match = real(_match1)
gen prod = .
replace prod = abs(yy-match) if _pos1==1

gen output = 0
replace output = 2 if prod == 0 | prod == 1 | prod == 2 | prod ==3
replace output = 1 if prod == 4 | prod == 5 | prod == 6 | prod ==7 | prod == 8 | prod == 9 | prod == 10 | prod ==11 | prod ==12
*****************************************************
******생년측정*****************************************
gen birth=substr(생년월일, 1, 4)
gen agedate=substr(학년도학기, 1, 4)
destring birth, gen(b)
destring agedate, gen(a)
gen age = a - b

************************직위****************************
encode 직위, gen(rank)
gen pro = 0
replace pro = 1 if rank ==1
gen asso = 0
replace asso = 1 if rank ==3
gen assist = 0
replace assist = 1 if rank ==7

gen tenure = 0
replace tenure = 3 if rank == 1
replace tenure = 2 if rank == 3
replace tenure = 1 if rank == 7 

****************** 전공코딩이 좀 복잡함 *************
	gen kyo = 0

	gen hp = 0
foreach num in 19 28 {  /*생명시스템, 이과대*/
	replace hp = 1 if major == `num' 
	}

	gen ha = 0
	foreach num in 3 5 20 24 {  /*간호대, 공대, 생과대, 약대*/
	replace ha = 1 if major == `num'
	}

	gen sp = 0
foreach i in 15 23 26 {  /*문과대, 신과대, 연계전공 */
	replace sp = 1 if major == `i' 
	}

	gen sa = 0
foreach i in 4 9 12 13 16 17 18 25 27 {  /*경영대, 교육과학대, 글인, 글인, 법과대학, 사과대, 상경대, 국제대, 음대  */
	replace sa = 1 if major == `i' 
	}

replace kyo = 1 if hp ==! 1 | ha ==! 1 | sp ==! 1 | sa ==! 1 

replace major = 0 if kyo == 1
replace major = 1 if hp == 1
replace major = 2 if ha == 1
replace major = 3 if sp == 1
replace major = 4 if sa == 1

gen ma = 0
replace ma = 1 if major == 1 | major == 2
replace ma = 2 if major == 3 | major == 4   

*********************************************************
*** ** grade, evaluation, credit, language, prerequiste, online class gra ev en el on
tab grade, gen(g) /*** 고학년인 경우 1 */
gen gra = 0
replace gra = 1 if g6-g10 == 1

tab ab, gen(eval) /* 상대평가인 경우 1 */
gen ev = 0 
replace ev = 1 if eval3 == 1 

tab lang, gen(eng)	/* 외국어어 강좌인 경우에 1로 처리 */
gen en = 0 
replace en = 1 if eng2-eng4 == 1 

tab elec, gen(prerequisite) /* 선택강좌의 경우 1로 처리함 */ 
gen el = 0 
replace el = 1 if prerequisite1==1 | prerequisite4==1 |prerequisite6==1

tab online, gen(onl) /* 온라인 강좌의 경우에 1 */ 
gen on = 0
replace on = 1 if onl2-onl4 ==1
*************************************************************

*** 역량 변수 형성
gen comp = (k1+k2+k3+k4)/4 

************************************
* 응답변수
foreach i of num 1/4 {
	gen res`i'=substr(문항5`i', 8, 10)
	replace res`i' = subinstr(res`i', "(", "",.) 
	replace res`i' = subinstr(res`i', ")", "",.)
	destring res`i', gen(r`i')
}

gen rp1 = real(res1)
gen rp2 = real(res2)
gen rp3 = real(res3)
gen rp4 = real(res4)


preserve
gen resp1=substr(문항51, 8, 10)
	replace resp1 = subinstr(resp1, "(", "",.) 
	replace resp1 = subinstr(resp1, ")", "",.)
	destring resp1, gen(r1)
restore


**************결측치 제거********************
foreach v of var satis k1 k2 k3 k4 outpu feed engage motivate age tenure ma gpa ev credit en el size on { 
	drop if missing(`v') 
}


******** 연구질문 1-a: 어떠한 강의 구성을 하는가? **************
gen outpu = 0
replace outpu = 2 if prod == 0 | prod == 1 | prod == 2 | prod ==3 | prod == 4 | prod ==5 
replace outpu = 1 if prod == 6 | prod ==7 | prod == 8 | prod == 9 | prod == 10 | prod ==11 | prod ==12

oneway satis outpu,  tabulate scheffe

************* Q1-b: Good researchers are better communicators!  
rename r1 Knowledge
rename r2 ProblemSolving
rename r3 OpenValues 
rename r4 Communication
gen research = 0
replace research = 1 if outpu == 1 | outpu == 2

ttest Knowledge if ma==0, by(research)
ttest ProblemSolving if ma==0, by(research)
ttest OpenValues if ma==0, by(research)
ttest Communication if ma==0, by(research)

ttest Knowledge if ma==1, by(research)
ttest ProblemSolving if ma==1, by(research)
ttest OpenValues if ma==1, by(research)
ttest Communication if ma==1, by(research)

ttest Knowledge if ma==2, by(research)
ttest ProblemSolving if ma==2, by(research)
ttest OpenValues if ma==2, by(research)
ttest Communication if ma==2, by(research)	

*****************************************************************

****** Q2: What Predicts students' satisfaction? ******************
encode 분반, gen(sub)
encode 실습분반, gen(ssub)
egen id=concat(class sub ssub)
destring id, gen(unit)



**************************************
preserve 
duplicates drop unit year, force
xtset unit year
xtreg satis i.outpu feed engage motivate flow age i.tenure i.ma gpa i.ev credit i.en i.el size i.on , fe r
outreg2 using im.doc, replace ctitle(Total)
xtreg satis i.outpu feed engage motivate flow age i.tenure gpa i.ev credit i.en i.el size i.on if ma == 1 , fe r
outreg2 using im.doc, append ctitle(Pure)
xtreg satis i.outpu feed engage motivate flow age i.tenure gpa i.ev credit i.en i.el size i.on if ma == 2 , fe r
outreg2 using im.doc, append ctitle(Soft)
xtreg satis i.outpu feed engage motivate flow age i.tenure gpa i.ev credit i.en i.el size i.on if ma == 0 , fe r
outreg2 using im.doc, append ctitle(Liberal)

****************What Predicts Competence? *********************

xtreg k1 i.outpu feed engage motivate flow age i.tenure i.ma gpa i.ev credit i.en i.el size i.on, fe r
outreg2 using kk.doc, replace ctitle(K1)
xtreg k2 i.outpu feed engage motivate flow age i.tenure i.ma gpa i.ev credit i.en i.el size i.on, fe r
outreg2 using kk.doc, append ctitle(K2) 
xtreg k3 i.outpu feed engage motivate flow age i.tenure i.ma gpa i.ev credit i.en i.el size i.on, fe r
outreg2 using kk.doc, append ctitle(K3)
xtreg k4 i.outpu feed engage motivate flow age i.tenure i.ma gpa i.ev credit i.en i.el size i.on, fe r
outreg2 using kk.doc, append ctitle(K4)
xtreg comp i.outpu feed engage motivate flow age i.tenure i.ma gpa i.ev credit i.en i.el size i.on, fe r
outreg2 using kk.doc, append ctitle(COMP)

xtreg rp1 i.outpu feed engage motivate flow age i.tenure i.ma gpa i.ev credit i.en i.el size i.on, fe r
outreg2 using rr.doc, replace ctitle(R1)
xtreg rp2 i.outpu feed engage motivate flow age i.tenure i.ma gpa i.ev credit i.en i.el size i.on, fe r
outreg2 using rr.doc, append ctitle(R2) 
xtreg rp3 i.outpu feed engage motivate flow age i.tenure i.ma gpa i.ev credit i.en i.el size i.on, fe r
outreg2 using rr.doc, append ctitle(R3)
xtreg rp4 i.outpu feed engage motivate flow age i.tenure i.ma gpa i.ev credit i.en i.el size i.on, fe r
outreg2 using rr.doc, append ctitle(R4)

restore










